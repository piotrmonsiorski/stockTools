async function getGold(t,e){let a=await fetch(`${nbpAPI}/cenyzlota/${t}/${e}${format}`);return await a.json()}async function getCurrencies(){let t=await fetch(`${nbpAPI}/exchangerates/tables/a${format}`);return(await t.json())[0].rates}async function getCurrency(t,e,a){let r=await fetch(`${nbpAPI}/exchangerates/rates/a/${t}/${e}/${a}${format}`);return await r.json()}function initBoard(){let t=apiMinDate.split("-"),e=apiMaxDate.split("-");const a=e[0]-t[0],r=[];for(let e=0;e<a;e++)r.push([`${Number(t[0])+e}-01-01`,`${Number(t[0])+e}-12-31`]);r.push([`${e[0]}-01-01`,e.join("-")]),t=t.join("-"),e=e.join("-");const n=[];r.forEach((t,e)=>{n.push(getGold(t[0],t[1]))}),Promise.all(n).then(t=>{goldDataset.push(t)}).then(()=>{goldDataset=goldDataset[0].reduce((t,e,a)=>t.concat(e),[]),chartdataList.push(new ChartData("gold","orange",goldDataset)),updateChart(t,e),updateButtons()}),getCurrencies().then(t=>{[document.querySelector('.data-edit [name="typeSelect"]'),document.querySelector('.data-add [name="typeSelect"]')].forEach(e=>{for(let a of t){const t=document.createElement("option");t.value=a.code,t.innerHTML=`${a.code} - ${a.currency}`,e.appendChild(t)}})}),addData("USD","red")}function updateChart(){drawChart()}function setDateFormat(t){const e=t.split("-");return e[0]=e[0].padStart(4,0),e[1]=e[1].padStart(2,0),e[2]=e[2].padStart(2,0),e.join("-")}function updateButtons(){const t=document.querySelector(".data-buttons"),e=[...document.querySelectorAll(".btn-data")];if(e)for(let t of e)t.remove();for(let e of chartdataList){const a=document.createElement("button");a.classList.add("btn"),a.classList.add("btn-data"),a.dataset.name=e.type,a.style.backgroundColor=e.getColor(),a.style.borderColor=e.getColor(),a.innerHTML=`${e.type}<span class="edit"><i class="fas fa-edit"></i></span>`,t.appendChild(a)}}function updateChartRanges(){const t=apiStartDate.split("-"),e=apiEndDate.split("-");document.querySelector('[name="startDay"]').value=Number(t[2]),document.querySelector('[name="startMonth"]').value=Number(t[1]),document.querySelector('[name="startYear"]').value=Number(t[0]),document.querySelector('[name="endDay"]').value=Number(e[2]),document.querySelector('[name="endMonth"]').value=Number(e[1]),document.querySelector('[name="endYear"]').value=Number(e[0])}function editData(){const t=document.querySelector(".data-edit"),e=document.querySelector(".data-add");t.classList.remove("hidden"),e.classList.add("hidden");const a=event.target.dataset.name,r=chartdataList[chartdataList.findIndex(t=>t.name=a)],n=document.querySelector('.data-edit [name="typeSelect"]'),o=document.querySelector('.data-edit [name="colorSelect"]'),d=document.querySelector("#dataEdit"),c=document.querySelector("#dataRemove");n.value=r.name,o.value=r.color,d.style.backgroundColor=r.color,d.style.borderColor=r.color,c.style.backgroundColor=r.color,c.style.borderColor=r.color}function addData(t,e){let a=apiMinDate.split("-"),r=apiMaxDate.split("-");const n=r[0]-a[0],o=[];for(let t=0;t<n;t++)o.push([`${Number(a[0])+t}-01-01`,`${Number(a[0])+t}-12-31`]);o.push([`${r[0]}-01-01`,r.join("-")]),a=a.join("-"),r=r.join("-");const d=[];o.forEach((e,a)=>{d.push(getCurrency(t,e[0],e[1]))});const c={};c.type=t,c.dataset=[],Promise.all(d).then(t=>{for(let e of t)c.dataset.push(e.rates)}).then(()=>{c.dataset=c.dataset.reduce((t,e,a)=>t.concat(e),[]),c.dataset=c.dataset.map(t=>({data:t.effectiveDate,cena:t.mid})),currencyDatasets.push(c),chartdataList.push(new ChartData(t,e,c.dataset)),updateChart(apiStartDate,apiEndDate),updateButtons()})}function checkTypeSelect(t,e){const a=t.value;"add"==e&&(chartdataList.every(t=>t.type!=a)?dataAddError=!1:(tooltipTypeSelectAdd.classList.add("visible"),dataAddError=!0))}function drawChart(t="chartMain",e=apiStartDate,a=apiEndDate){let r=document.querySelector(`#${t}`);r.parentNode.innerHTML=`<canvas id="${t}">`;const n=(r=document.querySelector(`#${t}`)).getContext("2d");let o=setDateFormat(e),d=setDateFormat(a),c=goldDataset.findIndex(t=>t.data>=o),i=goldDataset.findIndex((t,e)=>t.data>d);-1==i&&(i=goldDataset.length);const l=[];for(let t of chartdataList){const e=t.dataset.reduce((t,e,a)=>(t.push(e.cena),t),[]).slice(c,i);let a="gold"==t.type?"gold":"currency";l.push({data:e,yAxisID:a,backgroundColor:"transparent",borderColor:t.color,borderWidth:2,lineTension:0})}const s=chartdataList[0].dataset.reduce((t,e,a)=>(t.push(e.data),t),[]).slice(c,i),u=chartSettings.minGold,p=chartSettings.maxGold,m=chartSettings.minCurrency,S=chartSettings.maxCurrency;new Chart(n,{type:"line",data:{labels:s,datasets:l},options:{aspectRatio:3,legend:{display:!1},scales:{yAxes:[{id:"gold",position:"left",ticks:{min:u,max:p,beginAtZero:!1}},{id:"currency",position:"right",ticks:{min:m,max:S,beginAtZero:!1}}],xAxes:[{ticks:{},gridLines:{display:!1}}]}}})}const nbpAPI="https://api.nbp.pl/api",format="?format=json",currentDate=new Date,minDate=new Date("2013-01-01");minDate.setHours(0,0,0);const apiMaxDays=367,apiMinDate=setDateFormat(`${minDate.getFullYear()}-${minDate.getMonth()+1}-${minDate.getDate()}`),apiMaxDate=setDateFormat(`${currentDate.getFullYear()}-${currentDate.getMonth()+1}-${currentDate.getDate()}`);class ChartData{constructor(t,e,a){this.type=t,this.color=e,this.dataset=a}getColor(){let t=this.color;switch(t){case"red":t="#bc1d28";break;case"blue":t="#394fb2";break;case"violet":t="#8a20c0";break;case"green":t="#1f821b";break;case"orange":t="#e08e19";break;case"grey":t="#6b6b6b";break;case"black":default:t="#22222"}return t}}class CurrentDate{constructor(){const t=new Date;this.day=t.getDate().toString().padStart(2,0),this.month=(t.getMonth()+1).toString().padStart(2,0),this.year=t.getFullYear().toString().padStart(4,0)}makeDate(t,e,a){let r=Number(this.day)+a,n=Number(this.month)+e-1,o=Number(this.year)+t,d=new Date;return d.setYear(o),d.setMonth(n),d.setDate(r),r=d.getDate(),n=d.getMonth()+1,o=d.getFullYear(),{day:r,month:n,year:o}}}const chartSettings={minGold:100,maxGold:200,minCurrency:2,maxCurrency:5};document.querySelector('[name="goldMin"]').value=chartSettings.minGold,document.querySelector('[name="goldMax"]').value=chartSettings.maxGold,document.querySelector('[name="currencyMin"]').value=chartSettings.minCurrency,document.querySelector('[name="currencyMax"]').value=chartSettings.maxCurrency;const currentDateObj=new CurrentDate,todayObj=currentDateObj.makeDate(0,0,0),lastWeekObj=currentDateObj.makeDate(0,0,-7),lastMonthObj=currentDateObj.makeDate(0,-1,0),lastYearObj=currentDateObj.makeDate(-1,0,0),startDate=lastYearObj,endDate=currentDateObj;let apiStartDate=`${startDate.year}-${startDate.month}-${startDate.day}`,apiEndDate=`${endDate.year}-${endDate.month}-${endDate.day}`,goldDataset=[];const currencyDatasets=[];let currencyList=[],chartdataList=[];initBoard();const navTabs=document.querySelectorAll(".navbar-tabs .tab"),btnChartSettings=document.querySelector('[name="chartSettings"]'),btnSettingsSave=document.querySelector('[name="settingsSave"]'),btnSettingsCancel=document.querySelector('[name="settingsCancel"]'),btnChartWeek=document.querySelector("#btnChartWeek"),btnChartMonth=document.querySelector("#btnChartMonth"),btnChartYear=document.querySelector("#btnChartYear"),btnChartFull=document.querySelector("#btnChartFull"),btnOwnUnfold=document.querySelector("#chartOwn"),btnOwnSet=document.querySelector("#chartOwnSet"),btnSwapDates=document.querySelector("#swapDates"),inpStartDay=document.querySelector('[name="startDay"]'),inpStartMonth=document.querySelector('[name="startMonth"]'),inpStartYear=document.querySelector('[name="startYear"]'),inpEndDay=document.querySelector('[name="endDay"]'),inpEndMonth=document.querySelector('[name="endMonth"]'),inpEndYear=document.querySelector('[name="endYear"]'),tooltipStartDate=document.querySelector('.tooltip[name="startDate"]'),tooltipEndDate=document.querySelector('.tooltip[name="endDate"]'),tooltipSwapDates=document.querySelector('.tooltip[name="swapDates"]'),btnChartAdd=document.querySelector("#chartAdd"),btnDataAdd=document.querySelector("#dataAdd"),btnsDataCancel=document.querySelectorAll('[name="dataCancel"]'),inpEditTypeSelect=document.querySelector('.data-edit [name="typeSelect"]'),inpEditColorSelect=document.querySelector('.data-edit [name="colorSelect"]'),inpAddTypeSelect=document.querySelector('.data-add [name="typeSelect"]'),inpAddColorSelect=document.querySelector('.data-add [name="colorSelect"]'),tooltipDataEdit=document.querySelector('.tooltip[name="dataEdit"]'),tooltipDataAdd=document.querySelector('.tooltip[name="dataAdd"]'),tooltipTypeSelectEdit=document.querySelector('.tooltip[name="dataEditType"]'),tooltipTypeSelectAdd=document.querySelector('.tooltip[name="dataAddType"]'),tooltipColorSelectEdit=document.querySelector('.tooltip[name="dataEditColor"]'),tooltipColorSelectAdd=document.querySelector('.tooltip[name="dataAddColor"]');let dataEditError=!1,dataAddError=!1;btnChartSettings.addEventListener("click",()=>{document.querySelector(".chart-settings").classList.remove("hidden")}),btnSettingsSave.addEventListener("click",()=>{const t=document.querySelector('[name="goldMin"]'),e=document.querySelector('[name="goldMax"]'),a=document.querySelector('[name="currencyMin"]'),r=document.querySelector('[name="currencyMax"]'),n=t.value?t.value:chartSettings.minGold,o=e.value?e.value:chartSettings.maxGold,d=a.value?a.value:chartSettings.minCurrency,c=r.value?r.value:chartSettings.maxCurrency;chartSettings.minGold=Number(n),chartSettings.maxGold=Number(o),chartSettings.minCurrency=Number(d),chartSettings.maxCurrency=Number(c),document.querySelector(".chart-settings").classList.add("hidden"),updateChart()}),btnSettingsCancel.addEventListener("click",()=>{document.querySelector(".chart-settings").classList.add("hidden")}),btnChartWeek.addEventListener("click",()=>{apiStartDate=`${lastWeekObj.year}-${lastWeekObj.month}-${lastWeekObj.day}`,apiEndDate=apiMaxDate,updateChartRanges(),updateChart()}),btnChartMonth.addEventListener("click",()=>{apiStartDate=`${lastMonthObj.year}-${lastMonthObj.month}-${lastMonthObj.day}`,apiEndDate=apiMaxDate,updateChartRanges(),updateChart()}),btnChartYear.addEventListener("click",()=>{apiStartDate=`${lastYearObj.year}-${lastYearObj.month}-${lastYearObj.day}`,apiEndDate=apiMaxDate,updateChartRanges(),updateChart()}),btnChartFull.addEventListener("click",()=>{apiStartDate=apiMinDate,apiEndDate=apiMaxDate,updateChartRanges(),updateChart()}),btnOwnUnfold.addEventListener("click",()=>{document.querySelector(".own-wrap").classList.toggle("closed"),event.target.classList.toggle("btn-outline")}),updateChartRanges(),btnOwnSet.addEventListener("click",()=>{tooltipStartDate.classList.remove("visible"),tooltipEndDate.classList.remove("visible"),tooltipSwapDates.classList.remove("visible");let t=!1;const e=inpStartDay.value,a=inpStartMonth.value,r=inpStartYear.value,n=inpEndDay.value,o=inpEndMonth.value,d=inpEndYear.value;let c=new Date(`${r}-${a}-${e}`),i=new Date(`${d}-${o}-${n}`);"Invalid Date"==c&&(tooltipStartDate.innerHTML="Niepoprawny format daty",tooltipStartDate.classList.add("visible"),t=!0),"Invalid Date"==i&&(tooltipEndDate.innerHTML="Niepoprawny format daty",tooltipEndDate.classList.add("visible"),t=!0),!t&&c.getTime()>i.getTime()&&(tooltipSwapDates.innerHTML="Niedprawidłowa kolejność dat",tooltipSwapDates.classList.add("visible"),t=!0),!t&&c.getTime()<minDate.getTime()&&(tooltipStartDate.innerHTML="Niebsługiwana data",tooltipStartDate.classList.add("visible"),t=!0),!t&&i.getTime()>currentDate.getTime()&&(tooltipEndDate.innerHTML="Data w przyszłości",tooltipEndDate.classList.add("visible"),t=!0),t||(apiStartDate=setDateFormat(`${r}-${a}-${e}`),apiEndDate=setDateFormat(`${d}-${o}-${n}`),updateChart())}),btnSwapDates.addEventListener("click",()=>{const t=inpStartDay.value,e=inpStartMonth.value,a=inpStartYear.value;inpStartDay.value=inpEndDay.value,inpStartMonth.value=inpEndMonth.value,inpStartYear.value=inpEndYear.value,inpEndDay.value=t,inpEndMonth.value=e,inpEndYear.value=a}),btnChartAdd.addEventListener("click",()=>{});const dataEditNode=document.querySelector(".data-edit"),dataAddNode=document.querySelector(".data-add");btnChartAdd.addEventListener("click",()=>{dataEditNode.classList.add("hidden"),dataAddNode.classList.remove("hidden")}),inpAddTypeSelect.addEventListener("change",()=>{tooltipTypeSelectAdd.classList.remove("visible"),dataAddError=!1,chartdataList.every(t=>t.type!=inpAddTypeSelect.value)||(tooltipTypeSelectAdd.classList.add("visible"),dataAddError=!0)}),inpEditTypeSelect.addEventListener("change",()=>{tooltipTypeSelectEdit.classList.remove("visible"),dataEditError=!1,chartdataList.every(t=>t.type!=inpEditTypeSelect.value)||(tooltipTypeSelectEdit.classList.add("visible"),dataEditError=!0)}),inpAddColorSelect.addEventListener("change",()=>{tooltipColorSelectAdd.classList.remove("visible"),dataAddError=!1,chartdataList.every(t=>t.color!=inpAddColorSelect.value)||(tooltipColorSelectAdd.classList.add("visible"),dataAddError=!0)}),inpEditColorSelect.addEventListener("change",()=>{tooltipColorSelectEdit.classList.remove("visible"),dataEditError=!1,chartdataList.every(t=>t.color!=inpEditColorSelect.value)||(tooltipColorSelectEdit.classList.add("visible"),dataEditError=!0)}),btnDataAdd.addEventListener("click",()=>{tooltipDataAdd.classList.remove("visible");const t=inpAddTypeSelect.value,e=inpAddColorSelect.value;checkTypeSelect(inpAddTypeSelect,"add"),dataAddError?console.log("error!"):addData(t,e)}),btnsDataCancel.forEach(t=>{t.addEventListener("click",()=>{dataEditNode.classList.add("hidden"),dataAddNode.classList.add("hidden")})});